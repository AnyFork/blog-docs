(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{485:function(n,t,a){"use strict";a.r(t);var i=a(2),e=Object(i.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v(" Nginx是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了IMAP/POP3/SMTP 服务。适合做静态文件处理和反向代理服务器，轻量级,非阻塞，支持高并发，高抗压，耗费内存少。同时支持故障转移，负载均衡等功能。")]),n._v(" "),t("boxx"),n._v(" "),t("h2",{attrs:{id:"一、nginx-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、nginx-简介"}},[n._v("#")]),n._v(" 一、nginx 简介")]),n._v(" "),t("div",{staticClass:"custom-block theorem"},[t("p",{staticClass:"title"}),t("p",[n._v("Nginx (engine x) 是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了 IMAP/POP3/SMTP 服务。Nginx 是由伊戈尔·赛索耶夫为俄罗斯访问量第二的 Rambler.ru 站点（俄文：Рамблер）开发的，第一个公开版本 0.1.0 发布于 2004 年 10 月 4 日。\n其将源代码以类 BSD 许可证的形式发布，因它的稳定性、丰富的功能集、简单的配置文件和低系统资源的消耗而闻名。2011 年 6 月 1 日，nginx 1.0.4 发布。\nNginx 是一款轻量级的 Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在 BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上 nginx 的并发能力在同类型的网页服务器中表现较好，中国大陆使用 nginx 网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。")]),n._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[n._v("来自 "),t("a",{attrs:{href:"https://baike.baidu.com/item/nginx/3817705?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[n._v("维基百科"),t("OutboundLink")],1)])])]),t("h2",{attrs:{id:"二、nginx-的优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、nginx-的优点"}},[n._v("#")]),n._v(" 二、Nginx 的优点")]),n._v(" "),t("p",[n._v("1、"),t("strong",[n._v("跨平台")]),n._v("：Nginx 可以在大多数 Unix like OS 编译运行，而且也有 Windows 的移植版本。")]),n._v(" "),t("p",[n._v("2、"),t("strong",[n._v("简单稳定")]),n._v("：配置简单，非常容易上手，基本在一个 conf 文件中配置，性能比较稳定，用于反向代理，宕机的概率微乎其微，可以 7*24 小时长时间不间断运行手。")]),n._v(" "),t("p",[n._v("3、"),t("strong",[n._v("非阻塞")]),n._v("、高并发连接：数据复制时，磁盘 I/O 的第一阶段是非阻塞的。官方测试能够支撑 5 万并发连接，在实际生产环境中跑到 2 ～ 3 万并发连接数.(这得益于 Nginx 使用了最新的 epoll 模型)")]),n._v(" "),t("p",[n._v("4、"),t("strong",[n._v("事件驱动")]),n._v("：通信机制采用 epoll 模型，支持更大的并发连接。")]),n._v(" "),t("p",[n._v("5、"),t("strong",[n._v("master/worker 结构")]),n._v("：一个 master 进程，生成一个或多个 worker 进程")]),n._v(" "),t("p",[n._v("6、"),t("strong",[n._v("内存消耗小")]),n._v("：处理大并发的请求内存消耗非常小。在 3 万并发连接下，开启的 10 个 Nginx 进程才消耗 150M 内存（15M*10=150M）")]),n._v(" "),t("p",[n._v("7、"),t("strong",[n._v("成本低廉")]),n._v("：Nginx 可以做高并发的负载均衡，且 Nginx 是开源免费的。而购买 F5 BIG-IP、NetScaler 等硬件负载均衡交换机则需要十多万至几十万人民币")]),n._v(" "),t("p",[n._v("8、"),t("strong",[n._v("内置的健康检查功能")]),n._v("：NGINX 能够根据应用服务器处理页面返回的状态码、超时信息等检测服务器是否出现故障，并及时返回错误的请求重新提交到其它节点上")]),n._v(" "),t("p",[n._v("9、"),t("strong",[n._v("节省带宽")]),n._v("：支持 GZIP 压缩，可以添加浏览器本地缓存的 Header 头。")]),n._v(" "),t("p",[n._v("10、"),t("strong",[n._v("稳定性高")]),n._v("：用于反向代理，宕机的概率微乎其微")]),n._v(" "),t("p",[n._v("11、"),t("strong",[n._v("模块化程度高")]),n._v("：Nginx 是高度模块化的设计，编写模块相对简单，包括 gzipping, byte ranges, chunked responses,以及 SSI-filter 等 filter，支持 SSL 和 TLSSNI。")]),n._v(" "),t("p",[n._v("12、"),t("strong",[n._v("支持 Rwrite 重写规则")]),n._v("：能够根据域名、URL 的不同， 将 HTTP 请求分发到不同的后端服务器群组。")]),n._v(" "),t("p",[n._v("13、"),t("strong",[n._v("支持反向代理和负载均衡")]),n._v("：nginx 支持反向代理和负载均衡的功能。")]),n._v(" "),t("p",[n._v("14、nginx 代理和后端 web 服务器间无需长连接；")]),n._v(" "),t("p",[n._v("15、接收用户请求是异步的，即先将用户请求全部接收下来，再一次性发送后后端 web 服务器，极大的减轻后端 web 服务器的压力。")]),n._v(" "),t("p",[n._v("16、送响应报文时，是边接收来自后端 web 服务器的数据，边发送给客户端的。")]),n._v(" "),t("p",[n._v("17、网络依赖型低。NGINX 对网络的依赖程度非常低，理论上讲，只要能够 ping 通就可以实施负载均衡，而且可以有效区分内网和外网流量。")]),n._v(" "),t("h2",{attrs:{id:"三、nginx-的缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、nginx-的缺点"}},[n._v("#")]),n._v(" 三、Nginx 的缺点")]),n._v(" "),t("p",[n._v("1、"),t("strong",[n._v("动态处理差")]),n._v("：Nginx只适合静态和反向代理，nginx 处理静态文件好,耗费内存少，但是处理动态页面则很鸡肋，现在一般前端用 nginx 作为反向代理抗住压力，apache 作为后端处理动态请求。")]),n._v(" "),t("p",[n._v("2、"),t("strong",[n._v("rewrite 弱")]),n._v("：虽然 nginx 支持 rewrite 功能，但是相比于 Apache 来说，Apache 比 nginx 的 rewrite 强大。")]),n._v(" "),t("h2",{attrs:{id:"四、功能对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、功能对比"}},[n._v("#")]),n._v(" 四、功能对比")]),n._v(" "),t("h3",{attrs:{id:"nginx-和-tomcat-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-和-tomcat-的区别"}},[n._v("#")]),n._v(" Nginx 和 tomcat 的区别")]),n._v(" "),t("p",[n._v(" nginx 常用做静态内容服务和代理服务器，直接外来请求转发给后面的应用服务器（tomcat，Django 等），tomcat 更多用来做一个应用容器，让 java web app 泡在里面的东西。严格意义上来讲，Apache 和 nginx 应该叫做 HTTP Server，而 tomcat 是一个 Application Server 是一个 Servlet/JSO 应用的容器。客户端通过 HTTP Server 访问服务器上存储的资源（HTML 文件，图片文件等），HTTP Server 是中只是把服务器上的文件如实通过 HTTP 协议传输给客户端。应用服务器往往是运行在 HTTP Server 的背后，执行应用，将动态的内容转化为静态的内容之后，通过 HTTP Server 分发到客户端\n注意：nginx 只是把请求做了分发，不做处理！！")]),n._v(" "),t("h3",{attrs:{id:"nginx-和-apache-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-和-apache-的区别"}},[n._v("#")]),n._v(" Nginx 和 Apache 的区别")]),n._v(" "),t("p",[n._v(" Apache 是同步多进程模型，一个连接对应一个进程，而 nginx 是异步的，多个连接（万级别）可以对应一个进程。nginx 轻量级，抗并发，处理静态文件好\nApache 超稳定，对 PHP 支持比较简单，nginx 需要配合其他后端用，处理动态请求有优势，建议使用前端 nginx 抗并发，后端 apache 集群，配合起来会更好，nignx 的正向代理和反向代理")]),n._v(" "),t("p",[t("strong",[n._v("1、nginx 相对于 apache 的优点")])]),n._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[n._v("轻量级，同样起 web 服务，比 apache 占用更少的内存及资源 抗并发，nginx 处理请求是异步非阻塞的，而 apache 则是阻塞型的，在高并发下 nginx 能保持低资源低消耗高性能高度模块化的设计，编写模块相对简单提供负载均衡,社区活跃，各种高性能模块出品迅速")])]),t("p",[t("strong",[n._v("2、apache 相对于 nginx 的优点")])]),n._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[n._v("apache 的 rewrite（重写） 比 nginx 的强大 ;支持动态页面;支持的模块多，基本涵盖所有应用;性能稳定，而 nginx 相对 bug 较多。")])]),t("p",[t("strong",[n._v("3、两者优缺点比较")])]),n._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[n._v("Nginx 配置简洁, Apache 复杂 ;\nNginx 静态处理性能比 Apache 高 3 倍以上 ;\nApache 对 PHP 支持比较简单，Nginx 需要配合其他后端用;Apache 的组件比 Nginx 多 ;\napache 是同步多进程模型，一个连接对应一个进程;nginx 是异步的，多个连接(万级别)可以对应一个进程;\nnginx 处理静态文件好,耗费内存少;\n动态请求由 apache 去做，nginx 只适合静态和反向;\nNginx 适合做前端服务器，负载性能很好;\nNginx 本身就是一个反向代理服务器 ，且支持负载均衡")])]),t("Reward")],1)}),[],!1,null,null,null);t.default=e.exports}}]);