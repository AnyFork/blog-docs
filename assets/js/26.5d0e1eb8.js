(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{494:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v(" nohup 是不挂断的意思( no hang up)。如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用 nohup 命令。该命令忽略所有挂（SIGHUP）信号，可以在你退出帐户/关闭终端之后继续运行相应的进程。  是指在后台运行，但当用户推出(挂起)的时候，命令自动也跟着退出. nohup 与   结合起来，可以实现不挂断的后台运行。")]),t._v(" "),s("Boxx"),t._v(" "),s("h2",{attrs:{id:"一、nohup-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、nohup-命令"}},[t._v("#")]),t._v(" 一、nohup 命令")]),t._v(" "),s("p",[s("strong",[t._v("1、nohup 命令格式："),s("code",[t._v("nohup Command [ Arg … ] [ & ]")]),t._v(", Command：启动对象命令,可以跟该命令需要的各种参数。")])]),t._v(" "),s("p",[t._v(" nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 & （ 表示“and”的符号）到命令的尾部。带   的命令行，即使 terminal 关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上)。"),s("br"),t._v(" "),s("strong",[t._v("2、实现屏幕输出记录到日志文件")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" yourcommand "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果不指定重定向，则日志默认输出到当前目录下 nohup.out 文件中。"),s("br"),t._v("\n操作系统中有三个常用的流：")]),t._v(" "),s("ul",[s("li",[t._v("0：stdin 标准输入, 1：代表 stdout 标准输出, 2：代表 stderr 标准错误。")])]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("一般当我们用 > console.txt，实际是 1>console.txt 的省略用法；< console.txt ，实际是 0 < console.txt 的省略用法。")])],1),t._v(" "),s("ul",[s("li",[t._v("2>&1 作用：")])]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件 output 里面，所以结果是标准错误和标准输出都导入文件 output 里面了。 至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而 stdout 有。")])],1),t._v(" "),s("p",[t._v("最后谈一下/dev/null 文件的作用，这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。 所以一般很大的 stdou 和 stderr 当你不关心的时候可以利用 stdout 和 stderr 定向到这里>./command.sh >/dev/null 2>&1，代表不输出日志。")]),t._v(" "),s("p",[s("strong",[t._v("3、如果希望将日志输出到别的文件中，可以增加一个文件路径参数。如下：")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" yourcommand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" myout.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("其中 myout.log 是保存输出的文件名称。"),s("br"),t._v(" "),s("strong",[t._v("4、实时监测日志输出内容命令")]),s("br"),t._v("\n tail 命令是 nohup 命令的好搭档。配合-f 参数，可以实时监视向日志文件增加的信息。tail -f 等同于–follow=descriptor，根据文件描述符进行追踪，当文件改名或被删除，追踪停止。tail -F 等同于–follow=name --retry，根据文件名进行追踪，并保持重试，即该文件被删除或改名后，如果再次创建相同的文件名，会继续追踪。"),s("br"),t._v("\n tailf 等同于 tail -f -n 10，与 tail -f 不同的是，如果文件不增长，它不会去访问磁盘文件，所以 tailf 特别适合那些便携机上跟踪日志文件，因为它减少了磁盘访问，可以省电。")]),t._v(" "),s("p",[s("strong",[t._v("5、标准输出，日志文件覆盖")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" output.txt\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" output.txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("以上两句等价。将命令的 stdout 重定向至文件，stdout 将不会出现在终端。如果文件已经存在，将会覆盖。")]),t._v(" "),s("p",[s("strong",[t._v("6、标准输出，日志文件追加")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" output.txt\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">>")]),t._v(" output.txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("以上两句等价。将命令的 stdout 重定向至文件，stdout 将不会出现在终端。如果文件已经存在，新数据将会添加至文件末尾。")]),t._v(" "),s("p",[s("strong",[t._v("7、标准错误输出，日志文件覆盖")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" output.txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将命令的 stderr 重定向至文件，stderr 将不会出现在终端。如果文件已经存在，将会覆盖。")]),t._v(" "),s("p",[s("strong",[t._v("8、标准错误输出，日志文件追加")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">>")]),t._v(" output.txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将命令的 stderr 重定向至文件，stderr 将不会出现在终端。如果文件已经存在，新数据将会添加至文件末尾。")]),t._v(" "),s("p",[s("strong",[t._v("9、标准输出+标准错误输出，日志文件覆盖")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>")]),t._v(" output.txt\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("output.txt "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("以上两句等价。将命令的 stdout 与 stderr 都重定向至文件，此时终端将没有任何输出。如果文件已经存在，将会覆盖。")]),t._v(" "),s("p",[s("strong",[t._v("10、标准输出+标准错误输出，日志文件追加")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>>")]),t._v(" output.txt\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("output.txt "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("将命令的 stdout 与 stderr 都重定向至文件，此时终端将没有任何输出。如果文件已经存在，新数据将会添加至文件末尾。")]),t._v(" "),s("h2",{attrs:{id:"二、实例展示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、实例展示"}},[t._v("#")]),t._v(" 二、实例展示")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#代表不输出,/dev/null像是个黑洞，吸纳所有")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" test.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标准输出,以下两句等价")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" test.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /home/dir1/dir2/my1.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" test.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" /home/dir1/dir2/my1.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标准错误输出，这个在当前目录下会产生nohup.out（标准输出），然后在/home/dir1/dir2下产生my1.log（标准错误输出）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" test.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" /home/dir1/dir2/my1.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 标准输出+标准错误输出，将标准错误 2 重定向到标准输出 &1 ，标准输出 &1 再被重定向输入到 my1.log 文件中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" test.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /home/dir1/dir2/my1.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" test.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>")]),t._v(" /home/dir1/dir2/my1.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h2",{attrs:{id:"三、tomcat-清除-catalina-out-日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、tomcat-清除-catalina-out-日志"}},[t._v("#")]),t._v(" 三、Tomcat 清除 catalina.out 日志")]),t._v(" "),s("p",[s("strong",[t._v("一、重定向方法清空文件：")])]),t._v(" "),s("ul",[s("li",[t._v("进入 tomcat 的 logs 文件夹下:")]),t._v(" "),s("li",[t._v("查看日志文件大小：du -h catalina.out")]),t._v(" "),s("li",[t._v("重定向清空文件：catalina.out")]),t._v(" "),s("li",[t._v("再次查看日志文件大小：du -h catalina.out")])]),t._v(" "),s("p",[s("strong",[t._v("二、使用 true 命令重定向清空文件：")])]),t._v(" "),s("ul",[s("li",[t._v("进入 tomcat 的 logs 文件夹下:")]),t._v(" "),s("li",[t._v("查看日志文件大小：du -h catalina.out")]),t._v(" "),s("li",[t._v("重定向清空文件：true>catalina.out")]),t._v(" "),s("li",[t._v("再次查看日志文件大小：du -h catalina.out")])]),t._v(" "),s("p",[s("strong",[t._v("三、使用 cat/cp/dd 命令及/dev/null 设备来清空文件")])]),t._v(" "),s("p",[t._v("进入 tomcat 的 logs 文件夹下: 1.使用 cat /dev/null 命令清空文件：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("查看日志文件大小：du -h catalina.out")])]),t._v(" "),s("li",[s("p",[t._v("重定向清空文件：cat /dev/null>catalina.out")])]),t._v(" "),s("li",[s("p",[t._v("再次查看日志文件大小：du -h catalina.out")]),t._v(" "),s("p",[t._v("2.使用 cp /dev/null 命令清空文件：")])]),t._v(" "),s("li",[s("p",[t._v("查看日志文件大小：du -h catalina.out")])]),t._v(" "),s("li",[s("p",[t._v("重定向清空文件：cp /dev/null catalina.out")])]),t._v(" "),s("li",[s("p",[t._v("再次查看日志文件大小：du -h catalina.out")]),t._v(" "),s("p",[t._v("3.使用 dd if=/dev/null of=catalina.out 命令清空文件：")])]),t._v(" "),s("li",[s("p",[t._v("查看日志文件大小：du -h catalina.out")])]),t._v(" "),s("li",[s("p",[t._v("重定向清空文件：dd if=/dev/null of=catalina.out")])]),t._v(" "),s("li",[s("p",[t._v("再次查看日志文件大小：du -h catalina.out")])])]),t._v(" "),s("p",[s("strong",[t._v("四、使用 echo 命令清空文件：")])]),t._v(" "),s("p",[t._v("进入 tomcat 的 logs 文件夹下:")]),t._v(" "),s("ul",[s("li",[t._v('echo -n "">catalina.out ——>加上“-n”参数，默认情况下会“\\n",')]),t._v(" "),s("li",[t._v("查看日志文件大小：du -h catalina.out")]),t._v(" "),s("li",[t._v('重定向清空文件：echo -n "参数">catalina.out')]),t._v(" "),s("li",[t._v("再次查看日志文件大小：du -h catalina.out")])]),t._v(" "),s("p",[s("strong",[t._v("五、使用 truecate 命令清空文件：")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -s参数是设置文件的大小，清空文件的话，就设定为0")]),t._v("\ntruncate -s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" catalina.out\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("进入 tomcat 的 logs 文件夹下:")]),t._v(" "),s("ul",[s("li",[t._v("查看日志文件大小：du -h catalina.out")]),t._v(" "),s("li",[t._v("重定向清空文件：truncate -s 0 catalina.out")]),t._v(" "),s("li",[t._v("再次查看日志文件大小：du -h catalina.out")])]),t._v(" "),s("Reward")],1)}),[],!1,null,null,null);s.default=r.exports}}]);